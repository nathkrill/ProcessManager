MAIN: ELEMENTS[] WS eof;

ELEMENTS[]: WS ELEMENT WS,
            continue peek(ELEMENT);

ELEMENTEND: ";";

WS@ignore: WSATOM[];
WSATOM[]: while peek(or(13, 10, " ", "\t"))
          or(13, 10, " ", "\t");
          
ELEMENT: NAME WS { if peek(QUAL(NAME[1])) QUAL(NAME[1]) else ELEMENTBODY(NAME[1]) };
ELEMENTBODY: WS ":" WS ELEMENTATOMS[] WS ELEMENTEND WS

QUAL(NAME): if peek("[") { WS "]" ARRAYQUAL(NAME[1]) }
            else if peek("(") { PARAMQUAL(NAME[1]) }
            else if peek("@") { ANNOTQUAL(NAME[1]) }

ARRAYQUAL(NAME): ELEMENTBODY ELEMENTEND WS

PARAMQUAL(NAME): ELEMENTBODY ELEMENTEND WS

ELEMENTATOMS[] : NAMES[]

NAMES[]: WS NAME,
         continue peek(NAME);

NAME: or(range('A','Z'), range('a','z'), '_') NAMEATOM[];
NAMEATOM[]: while peek(or(range('A','Z'), range('a','z'), '_', range('0','9')))
            or(range('A','Z'), range('a','z'), '_', range('0','9'));
            
WHILE: "while", WS, BOOLEANEXPR, WS, TOKENEXPR;

IF: "if", WS, BOOLEANEXPR, WS, TOKENEXPR, if peek(WS, "else") { WS, "else", WS, TOKENEXPR, produce(IFELSE(3)) } else produce(IF(2));

TOKENEXPR: if peek("{") TOKENEXPRS[] else NAME;