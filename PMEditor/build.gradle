/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with Foobar.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

version = '0.5.1'
description = 'Android interface with process model editor and task interface'

configurations {
    cleanedAnnotations

    compile.exclude group: 'org.jetbrains' , module:'annotations'
}

dependencies {
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1' // or 1.4-beta1
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1' // or 1.4-beta1
    compile files("${buildDir}/libs/annotations-cleaned.jar") { builtBy 'cleanAnnotationsJar' }

    compile project(':PE-diagram')
    compile project(':PE-common')
    compile project(':darwinlib')
    compile project(':DarwinJavaApi')
    compile project(':JavaCommonApi')
    compile project(':xmlutil:core')
    compile project(':xmlutil:android')

    testCompile 'org.testng:testng:6.9.13.8'
    testCompile 'junit:junit:4.12'
    testCompile project(path: ':PE-common', configuration: 'testJarConfig')
//    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'net.sf.kxml:kxml2:2.3.0'
//    testLocalCompile project(':PE-diagram')
//    testLocalCompile project(':darwinlib')
    compile "com.android.support:appcompat-v7:${androidCompatVersion}"
    compile "com.android.support:support-annotations:${androidCompatVersion}"
    compile "com.android.support:design:${androidCompatVersion}"
    compile "com.android.support:support-v4:${androidCompatVersion}"
    compile "com.android.support:recyclerview-v7:${androidCompatVersion}"
    compile "com.android.support:cardview-v7:${androidCompatVersion}"

    cleanedAnnotations 'org.jetbrains:annotations:13.0'
}

ext {
    if (!rootProject.hasProperty('androidCompatVersion')) {
        androidCompatVersion = '24.2.1'
    }
    if (!rootProject.hasProperty('androidPluginVersion')) {
        androidPluginVersion = '2.2.2'
    }
    if (!rootProject.hasProperty('androidBuildToolsVersion')) {
        androidBuildToolsVersion = '25.0.0'
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "${androidBuildToolsVersion}"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 2
        versionName version
        manifestPlaceholders = [ serverScheme:'https', serverHost:'darwin.bournemouth.ac.uk' ]
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {

        }
        debug {
            manifestPlaceholders = [ serverScheme:'http', serverHost:'10.0.2.2' ]
//            applicationIdSuffix ".debug"
            useJack false
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-project.txt'
            versionNameSuffix "-debug"
        }
    }

    testOptions {
//        unitTests.returnDefaultValues = true
    }
}

task cleanAnnotationsJar(type:Jar, dependsOn:configurations.cleanedAnnotations) {
    archiveName = "annotations-cleaned.jar"
    exclude 'org/jetbrains/annotations/NotNull.class'
    exclude 'org/jetbrains/annotations/Nullable.class'

    doFirst {
        configurations.cleanedAnnotations.each { f ->
            project.logger.debug("Found ${f} in cleanedAnnotations")
            from zipTree(f)
        }
    }
}
