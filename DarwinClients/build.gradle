/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with Foobar.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

version = '1.0.0'
description = 'A project for the automatically generated service clients for various services'

//group = 'server'

def genDir = new File(projectDir,'gen')
def genClasses = ['nl.adaptivity.process.userMessageHandler.server.InternalEndpoint' , 'nl.adaptivity.process.engine.servlet.ServletProcessEngine']

configurations {
    codegen
}

sourceSets {
    main {
        java {
            srcDir 'src'
            srcDir genDir
        }
    }
}

task generate(dependsOn: [configurations.codegen, ':DarwinGenerators:assemble', ':ProcessEngine:servlet:classes', ':PEUserMessageHandler:apiClasses' ] , type:JavaExec) {
    group = 'build'
    description = 'Generate the client sources'

    doFirst {
        println()
        main = 'nl.adaptivity.messaging.MessagingSoapClientGenerator'
        def cp = configurations.codegen
                .plus(project(':PEUserMessageHandler').sourceSets.api.runtimeClasspath)

        classpath = cp
        args '-cp'
        args cp.join(':')

        args '-package', 'nl.adaptivity.process.client', '-dstdir', genDir.absolutePath
        genClasses.each {
            def y=it
            args y
        }
    }
}

compileJava.dependsOn generate

dependencies {
    codegen project(':DarwinGenerators')
    codegen project(path: ':PEUserMessageHandler', configuration: 'apiCompile')
    codegen project(path: ':ProcessEngine:servlet', configuration: 'codeGen')
//    compile 'generate'
    compile project(':JavaCommonApi')
    compile project(':java-common')
    compile project(':PE-common')
    compileOnly "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}"
    compileOnly project(path: ':PE-common', configuration:'compileOnly')
}


idea {
    module {
        sourceDirs -= genDir
        generatedSourceDirs += genDir
    }
}

