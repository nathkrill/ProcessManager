/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with ProcessManager.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

sourceCompatibility = myJavaVersion
targetCompatibility = myJavaVersion

version = '1.0.0'
description = 'A container for general support services for the darwin system, including messaging'

//group = [ 'server', 'service' ]

configurations {
    myProvidedCompile
}

sourceSets {
    main {
        compileClasspath+=configurations.myProvidedCompile
    }

}


task tomcatRun(dependsOn: ["classes"]) {
    group='web application'
    description = "Do everything needed to be able to run as embedded tomcat"
}


dependencies {
    compile project(':PE-common')
    myProvidedCompile project(path: ':PE-common', configuration:'compileOnly')
    compileOnly "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}"
    compileOnly project(":DarwinJavaApi")
}

/*
afterEvaluate {
    project.tasks['war'].classpath.each {
        logger.lifecycle("War classpath: ${it}")
    }
/*
    project.tasks['war'].dependsOn.each { Object dep ->
        logger.lifecycle("War depends on: ${dep.class.name} = $dep")
//        dep.properties.each { prop ->
//            logger.lifecycle("  ${prop.key}: ${prop.value}")
//        }
    }
    logger.lifecycle('')
    sourceSets.main.compileClasspath.each { logger.lifecycle("Main compileClasspath+=${it}")}
    logger.lifecycle('')
    sourceSets.main.runtimeClasspath.each { logger.lifecycle("Main runtimeClasspath+=${it}")}
}
*/
