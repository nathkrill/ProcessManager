apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

version = '1.0.0'
description = 'The service that provides the process coordination system'
//group = ['server', 'service' ]


configurations {
    main {
        // This combines base, web and tomcat but this is needed for intellij tomcat support
        description = "The main compilation sources that just take all sources to put into the war"
    }
    baseCompile {
        description = "The main source that is not dependend on servlet api's"
    }
    webCompile {
        description = "The web version that is not dependent on tomcat as a host"
        extendsFrom baseCompile
    }
    webProvided {
       description = "Compile time only dependencies - not included in war"
    }
    tomcatExtProvided {
        description = "Tomcat compile time only dependencies - not included in war"
        transitive false
    }
    tomcatExtCompile {
        description = "Those classes that depend on tomcat as webhost"
        extendsFrom webCompile
        transitive false
    }
}

artifacts {
    main war
}

dependencies {
    compile project(':java-common')
    compile project(':PE-common')

    providedCompile "org.apache.tomcat:catalina:${tomcatVersion}"


    baseCompile project(':java-common')
    baseCompile project(':PE-common')

    webProvided "org.apache.tomcat:servlet-api:${tomcatVersion}"

    tomcatExtProvided "org.apache.tomcat:catalina:${tomcatVersion}"

//    configurations['runtime'].extendsFrom configurations['tomcatExtCompile']
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

webAppDirName = 'src/base/webapp'

sourceSets {
    base {
        java {
            srcDir 'src/base/java'
        }
    }
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/base/java'
            srcDir 'src/web/java'
            srcDir 'src/tomcat/java'
        }
    }
    web {
        java {
            srcDir 'src/web/java'
        }
    }
    web.compileClasspath += files(base.runtimeClasspath)
    web.compileClasspath += configurations.webProvided
    web.runtimeClasspath += files(base.runtimeClasspath)

    tomcatExt {
        java {
            srcDir 'src/tomcat/java'
        }
        compileClasspath += files (web.compileClasspath)
        compileClasspath += configurations.tomcatExtProvided
        compileClasspath.each({ logger.debug("Tomcat compile classpath: $it")})
        runtimeClasspath += files(web.runtimeClasspath)
    }

}

war {
//    classpath sourceSets.web.output
//    classpath sourceSets.tomcatExt.output
//    classpath sourceSets.main.output
}

war.dependsOn(task('baseCompile'))
war.dependsOn(task('webCompile'))
war.dependsOn(task('tomcatExtCompile'))

jar {
    from sourceSets.base.output
    from sourceSets.web.output
    from sourceSets.tomcatExt.output
}

/*
task tomcatRun(dependsOn: [war, sourceSets.tomcat.runtimeClasspath]) {
    group='web application'
    description = "Do everything needed to be able to run as embedded tomcat"

}*/
/*
compileWebJava {
    doFirst {
        println("webJava")
        configurations.tomcatExtCompile.allDependencies.each({ println("Dependency: $it")})
        sourceSets.tomcatExt.compileClasspath.each({ println("CompileClasspath: $it") })
    }
}
*/
