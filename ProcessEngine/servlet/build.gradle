/*
 * Copyright (c) 2018.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with ProcessManager.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'kotlin'
apply plugin: 'war'
apply plugin: 'idea'

version = '1.0.0'
description = 'The service that provides the process coordination system'
//group = ['server', 'service' ]

def wsDestDir = file("${buildDir}/docs/wsDoc")

configurations {
    wsDoc {
        description "Dependencies needed to run the custom web service doclet."
    }
    wsDocOutput
    codeGen {
        extendsFrom configurations.getByName('default')
    }
}

task testJar(type: Jar) {
    baseName = "${project.name}-test"
    from sourceSets.test.output
}

dependencies {
    providedCompile project(':JavaCommonApi:java')
    providedCompile project(':JavaCommonApi:jvm')
    providedCompile project(path: ':ProcessEngine:core', configuration: "compileOnly")
    providedCompile "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation project(":multiplatform:jvm")
    implementation "org.jetbrains:annotations:13.0"
    implementation project(':ProcessEngine:core')

    testCompile project(path: ':ProcessEngine:core', configuration:"testRuntime")
    testCompile project(':DarwinJavaApi')
    testCompile project(":TestSupport")
    testCompile project(path: ':PE-common:jvm', configuration:"testRuntime")
    testCompile "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    testImplementation 'org.xmlunit:xmlunit-core:2.6.0'
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
}

test {
    useJUnitPlatform()
}

war {
    baseName = "${project.parent.name}-${project.name}"
}

jar {
    baseName = "${project.parent.name}-${project.name}"
}

artifacts {
    archives war
    codeGen jar
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

//webAppDirName = 'src/main/webapp'


/*
task wsDoc(type:Javadoc) {
    dependsOn configurations.wsDoc
    dependsOn configurations.compile
    group = "documentation"
    classpath = sourceSets.main.compileClasspath
    source = sourceSets.main.allJava
    destinationDir = wsDestDir
    options.docletpath = configurations.wsDoc.files.asType(List)
    options.doclet = "nl.adaptivity.ws.doclet.WsDoclet"

    doFirst() {
        source=project.files(source, project(":PE-common:jvm").sourceSets.main.allJava)
    }

}

assemble.dependsOn tasks.wsDoc
*/

idea {
    module {
        name = "${parent.name}-${project.name}"
    }
}
