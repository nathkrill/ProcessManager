/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with ProcessManager.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'kotlin'
apply plugin: 'war'

description = 'The web application that is responsible for managing and maintaining accounts for darwin'

configurations {
    javascript
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx.html.jvm:0.5.7"
    compile 'com.sun.mail:javax.mail:1.5.5'
    compile project(':accountcommon')
    compile project(':darwin:jvm')
    compileOnly "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}"
    compileOnly project(":DarwinJavaApi")
    testCompile 'org.testng:testng:6.9.13.8'
    testRuntime 'mysql:mysql-connector-java:5.1.36'

    javascript project(':accountmgr:js')
}

test {
    useTestNG()
}

war {
    dependsOn configurations.javascript
    configurations.javascript.each { File file ->
        logger.info("Adding javascript dependency "+file.toString())
        into("js") {
            from zipTree(file.absolutePath)
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js")&& path.startsWith("META-INF/resources") || !path.startsWith("META-INF/")
            }
            exclude { f ->
                def r = f.name.endsWith(".class") || (f.name.endsWith(".kjsm") && f.path.startsWith("kotlinx.html.shared"))
                if (r) logger.info("Skipping inclusion of `${f.relativePath.pathString}` into javascript path")
                return r
            }
        }
    }
}

sourceCompatibility = myJavaVersion
targetCompatibility = myJavaVersion

