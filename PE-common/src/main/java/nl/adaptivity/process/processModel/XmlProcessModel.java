//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.08.27 at 08:15:55 PM CEST
//


package nl.adaptivity.process.processModel;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;

import net.devrieze.util.CollectionUtil;
import net.devrieze.util.StringUtil;
import nl.adaptivity.process.ProcessConsts.Engine;
import nl.adaptivity.process.processModel.engine.ActivityImpl;
import nl.adaptivity.process.processModel.engine.EndNodeImpl;
import nl.adaptivity.process.processModel.engine.JoinImpl;
import nl.adaptivity.process.processModel.engine.ProcessModelImpl;
import nl.adaptivity.process.processModel.engine.ProcessNodeImpl;
import nl.adaptivity.process.processModel.engine.SplitImpl;
import nl.adaptivity.process.processModel.engine.StartNodeImpl;
import nl.adaptivity.util.ListFilter;


/**
 * <p>
 * Java class for TProcessModel complex type.
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name=&quot;TProcessModel&quot;&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}anyType&quot;&gt;
 *       &lt;choice maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;&gt;
 *         &lt;element ref=&quot;{http://adaptivity.nl/ProcessEngine/}start&quot;/&gt;
 *         &lt;element ref=&quot;{http://adaptivity.nl/ProcessEngine/}activity&quot;/&gt;
 *         &lt;element ref=&quot;{http://adaptivity.nl/ProcessEngine/}join&quot;/&gt;
 *         &lt;element ref=&quot;{http://adaptivity.nl/ProcessEngine/}end&quot;/&gt;
 *       &lt;/choice&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.NONE)
@XmlType(name = XmlProcessModel.ELEMENTLOCALNAME + "Type", propOrder = { "nodes" })
@XmlRootElement(name = XmlProcessModel.ELEMENTLOCALNAME)
public class XmlProcessModel {

  public static final String ELEMENTLOCALNAME = "processModel";

  public static final QName ELEMENTNAME = new QName(Engine.NAMESPACE,ELEMENTLOCALNAME,Engine.NSPREFIX);

  public static final String ATTR_ROLES = "roles";

  public static final String ATTR_NAME = "name";

  public XmlProcessModel() {

  }

  public XmlProcessModel(final ProcessModel<? extends ProcessNodeImpl> m) {
    nodes = filter(CollectionUtil.<Object>copy(m.getModelNodes()), ProcessNodeImpl.class);
    name = m.getName();
    owner = m.getOwner()==null ? null : m.getOwner().getName();
    roles = m.getRoles();
    uuid = m.getUuid();
  }

  private List<ProcessNodeImpl> nodes;

  private UUID uuid;

  @XmlAttribute(name = ATTR_NAME)
  private String name;

  private String owner;

  private Set<String> roles;

  /**
   * Gets the value of the startOrActivityOrJoin property.
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot.
   * Therefore any modification you make to the returned list will be present
   * inside the JAXB object. This is why there is not a <CODE>set</CODE> method
   * for the startOrActivityOrJoin property.
   * <p>
   * For example, to add a new item, do as follows:
   *
   * <pre>
   * getStartOrActivityOrJoin().add(newItem);
   * </pre>
   * <p>
   * Objects of the following type(s) are allowed in the list {@link EndNodeImpl }
   * {@link ActivityImpl } {@link StartNode } {@link Join }
   */
  public List<? extends ProcessNodeImpl> getNodes() {
    if (nodes == null) {
      nodes = filter(new ArrayList<>(), ProcessNodeImpl.class);
    }
    return this.nodes;
  }

  @XmlMixed
  @XmlElementRefs({ @XmlElementRef(name = EndNodeImpl.ELEMENTNAME, type = EndNodeImpl.class),
                   @XmlElementRef(name = ActivityImpl.ELEMENTLOCALNAME, type = ActivityImpl.class),
                   @XmlElementRef(name = StartNodeImpl.ELEMENTNAME, type = StartNodeImpl.class),
                   @XmlElementRef(name = JoinImpl.ELEMENTNAME, type = JoinImpl.class),
                   @XmlElementRef(name = SplitImpl.ELEMENTNAME, type = SplitImpl.class)})
  public void setNodes(List<? extends ProcessNodeImpl> pNodes) {
    nodes.clear();
    nodes.addAll(pNodes);
  }

  private static <T> List<T> filter(List<?> source, Class<T> clazz) {
    ListFilter<T> result = new ListFilter<>(clazz, true);
    result.addAllObjects(source);
    return result;
  }

  public ProcessModelImpl toProcessModel() {
    if (nodes instanceof ArrayList) {
      List<ProcessNodeImpl> filtered = filter(nodes, ProcessNodeImpl.class);
      if (nodes.size()!=filtered.size()) {
        nodes.clear();
        nodes.addAll(filtered);
      }
    }
    return new ProcessModelImpl(this);
  }

  public void setName(final String name) {
    this.name = name;
  }

  public String getName() {
    return name;
  }

  @XmlAttribute(name = "owner")
  public String getOwner() {
    return owner;
  }

  public void setOwner(final String pOwner) {
    owner = pOwner;
  }

  public Set<String> getRoles() {
    if (roles == null) {
      roles = new HashSet<>();
    }
    return roles;
  }

  @XmlAttribute(name = ATTR_ROLES)
  public String getRolesString() {
    if ((roles == null) || (roles.size() == 0)) {
      return null;
    }
    return StringUtil.join(",", roles);
  }

  @XmlAttribute(name="uuid")
  String getUuidString() {
    return uuid==null ? null : uuid.toString();
  }

  public void setUuidString(String pUuid) {
    uuid = pUuid==null ? null : UUID.fromString(pUuid);
  }

  /**
   * @todo Optimize this to use a cache of role names.
   */
  public void setRolesString(final String pRoles) {
    roles = new HashSet<>();
    if ((pRoles == null) || (pRoles.trim().length() == 0)) {
      return;
    }
    int i = 0;
    int j = pRoles.indexOf(',');
    while (j >= 0) {
      roles.add(pRoles.substring(i, j));
      i = j + 1;
      j = pRoles.indexOf(',', i);
    }
  }

  public UUID getUuid() {
    return uuid;
  }

}
