//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.08.27 at 08:15:55 PM CEST
//


package nl.adaptivity.process.processModel;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import nl.adaptivity.process.engine.ProcessData;
import nl.adaptivity.process.exec.IProcessNodeInstance;

import org.w3c.dom.Node;


/**
 * May contain literal elements as content. In that case only the paramName
 * attribute is used.
 * <p>
 * Java class for ExportType complex type.
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="ExportType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;any maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="node" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="paramName" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="path" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DefineType", propOrder = { "content" })
@XmlRootElement(name=XmlDefineType.ELEMENTNAME)
public class XmlDefineType implements IXmlDefineType {

  public static final String ELEMENTNAME = "export";

  @XmlMixed
  @XmlAnyElement(lax = true)
  protected List<Object> content;

  @XmlAttribute(name="refnode")
  protected String refNode;

  @XmlAttribute(name="refname")
  protected String refName;

  @XmlAttribute(name="name", required = true)
  protected String name;

  @XmlAttribute(name="path")
  protected String path;

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.XmlImportType#getContent()
   */
  @Override
  public List<Object> getContent() {
    if (content == null) {
      content = new ArrayList<>();
    }
    return this.content;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlDefineType#getRefNode()
   */
  @Override
  public String getRefNode() {
    return refNode;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlDefineType#setRefNode(String)
   */
  @Override
  public void setRefNode(final String value) {
    this.refNode = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.XmlImportType#getName()
   */
  @Override
  public String getRefName() {
    return refName;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.XmlImportType#setName(java.lang.String)
   */
  @Override
  public void setRefName(final String value) {
    this.refName = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.XmlImportType#getParamName()
   */
  @Override
  public String getName() {
    return name;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.XmlImportType#setParamName(java.lang.String)
   */
  @Override
  public void setName(final String value) {
    this.name = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.XmlImportType#getPath()
   */
  @Override
  public String getPath() {
    return path;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.XmlImportType#setPath(java.lang.String)
   */
  @Override
  public void setPath(final String value) {
    this.path = value;
  }

  public static XmlDefineType get(IXmlDefineType pExport) {
    if (pExport instanceof XmlDefineType) { return (XmlDefineType) pExport; }
    XmlDefineType result = new XmlDefineType();
    result.content = pExport.getContent();
    result.refName = pExport.getRefName();
    result.refNode = pExport.getRefNode();
    result.name = pExport.getName();
    result.path = pExport.getPath();
    return result;
  }

  public <T extends IProcessNodeInstance<T>> ProcessData apply(IProcessNodeInstance<T> pNode) {
    // TODO Auto-generated method stub
    return null;
  }

}
