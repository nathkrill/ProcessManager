//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.08.27 at 08:15:55 PM CEST
//


package nl.adaptivity.process.processModel;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpression;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import nl.adaptivity.process.engine.ProcessData;

import org.w3c.dom.Node;


/**
 * <p>
 * Java class for ImportType complex type.
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="ImportType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="path" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.NONE)
@XmlType(name = "ResultType")
@XmlRootElement(name=XmlResultType.ELEMENTNAME)
public class XmlResultType implements IXmlResultType {

  public static final String ELEMENTNAME = "result";

  @XmlMixed
  @XmlAnyElement(lax = true)
  protected List<Object> content;

  private String name;

  private String path;

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlResultType#getContent()
   */
  @Override
  public List<Object> getContent() {
    if (content == null) {
      content = new ArrayList<>();
    }
    return this.content;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlResultType#getName()
   */
  @Override
  @XmlAttribute(required = true)
  public String getName() {
    return name;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlResultType#setName(java.lang.String)
   */
  @Override
  public void setName(final String value) {
    this.name = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlResultType#getPath()
   */
  @Override
  @XmlAttribute
  public String getPath() {
    return path;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlResultType#setPath(java.lang.String)
   */
  @Override
  public void setPath(final String value) {
    this.path = value;
  }

  public static XmlResultType get(IXmlResultType pImport) {
    if (pImport instanceof XmlResultType) { return (XmlResultType) pImport; }
    XmlResultType result = new XmlResultType();
    result.name = pImport.getName();
    result.path = pImport.getPath();
    return result;
  }

  /**
   * Transform the given payload as specified by tag.
   * @param pPayload
   * @return
   */
  public ProcessData apply(Node pPayload) {
    // TODO add support for varialble and function resolvers.
    XPathFactory factory = XPathFactory.newInstance();
    XPath myPath = factory.newXPath();
    try {
      XPathExpression path2 = myPath.compile(path);
      Node result = (Node) path2.evaluate(pPayload, XPathConstants.NODE);
      return new ProcessData(name, result);
    } catch (XPathExpressionException e) {
      throw new RuntimeException(e);
    }
  }

}
