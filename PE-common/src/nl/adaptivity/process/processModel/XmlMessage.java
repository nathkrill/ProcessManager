//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2009.08.27 at 08:15:55 PM CEST
//


package nl.adaptivity.process.processModel;

import java.io.StringWriter;
import java.net.URI;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

import nl.adaptivity.messaging.EndpointDescriptor;
import nl.adaptivity.messaging.EndpointDescriptorImpl;


/**
 * <p>
 * Java class for Message complex type.
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * <pre>
 * &lt;complexType name="Message">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;any processContents='lax'/>
 *       &lt;/sequence>
 *       &lt;attribute name="serviceNS" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="endpoint" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="operation" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="serviceName" type="{http://www.w3.org/2001/XMLSchema}NCName" />
 *       &lt;attribute name="url" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="method" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.NONE)
@XmlType(name = "Message")
public class XmlMessage implements IXmlMessage {

  public static final String ELEMENTNAME = "message";

  protected QName service;

  @XmlAttribute(name = "endpoint")
  protected String endpoint;

  @XmlAttribute(name = "operation")
  protected QName operation;

  @XmlAttribute(name = "url")
  protected String url;

  @XmlAttribute(name = "method")
  protected String method;

  @XmlAttribute(name = "type")
  protected String type;

  // These are managed on the methods.
  @XmlTransient
  private Node aBody;

  @XmlTransient
  private ArrayList<Object> aAny;

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getServiceName()
   */
  @Override
  @XmlAttribute(name = "serviceName", required = true)
  public String getServiceName() {
    return service.getLocalPart();
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setServiceName(java.lang.String)
   */
  @Override
  public void setServiceName(final String pName) {
    if (service == null) {
      service = new QName(pName);
    } else {
      service = new QName(service.getNamespaceURI(), pName);
    }
  }


  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getServiceNS()
   */
  @Override
  @XmlAttribute(name = "serviceNS")
  public String getServiceNS() {
    return service.getNamespaceURI();
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setServiceNS(java.lang.String)
   */
  @Override
  public void setServiceNS(final String pNamespace) {
    if (service == null) {
      service = new QName(pNamespace, "xx");
    } else {
      service = new QName(pNamespace, service.getLocalPart());
    }
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getService()
   */
  @Override
  public QName getService() {
    return service;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setService(javax.xml.namespace.QName)
   */
  @Override
  public void setService(final QName value) {
    this.service = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getEndpoint()
   */
  @Override
  public String getEndpoint() {
    return endpoint;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setEndpoint(java.lang.String)
   */
  @Override
  public void setEndpoint(final String value) {
    this.endpoint = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getEndpointDescriptor()
   */
  @Override
  public EndpointDescriptor getEndpointDescriptor() {
    return new EndpointDescriptorImpl(service, endpoint, URI.create(url));
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getOperation()
   */
  @Override
  public QName getOperation() {
    return operation;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getAny()
   */
  @Override
  @XmlAnyElement(lax = true)
  public Collection<Object> getAny() {
    if (aAny == null) {
      aAny = new ArrayList<>(1);
      if (aBody != null) {
        aAny.add(aBody);
        aBody = null;
      }
    }
    return aAny;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getMessageBody()
   */
  @Override
  public Node getMessageBody() {
    if ((aBody == null) && (aAny != null)) {
      final Iterator<Object> it = aAny.iterator();
      while (it.hasNext()) {
        final Object next = it.next();
        if ((next instanceof Element) || (next instanceof Document) || (next instanceof DocumentFragment)) {
          if (aBody != null) {
            throw new IllegalStateException("Only one member allowed");
          }
          aBody = (Node) next;
        }
      }
      if (aBody != null) {
        aAny = null;
      }
    }

    return aBody;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setMessageBody(java.lang.Object)
   */
  @Override
  public void setMessageBody(final Object o) {
    if (o instanceof Node) {
      aBody = (Node) o;
    }
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setOperation(javax.xml.namespace.QName)
   */
  @Override
  public void setOperation(final QName value) {
    this.operation = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getBodySource()
   */
  @Override
  public Source getBodySource() {
    return new DOMSource(getMessageBody());
  }


  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getUrl()
   */
  @Override
  public String getUrl() {
    return url;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setUrl(java.lang.String)
   */
  @Override
  public void setUrl(final String value) {
    this.url = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getMethod()
   */
  @Override
  public String getMethod() {
    return method;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setMethod(java.lang.String)
   */
  @Override
  public void setMethod(final String value) {
    this.method = value;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#getContentType()
   */
  @Override
  public String getContentType() {
    if (type == null) {
      return "application/soap+xml";
    } else {
      return type;
    }
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#setType(java.lang.String)
   */
  @Override
  public void setType(final String pType) {
    type = pType;
  }

  /* (non-Javadoc)
   * @see nl.adaptivity.process.processModel.IXmlMessage#toString()
   */
  @Override
  public String toString() {
    final TransformerFactory tf = TransformerFactory.newInstance();
    Transformer t;
    try {
      t = tf.newTransformer();
    } catch (final TransformerConfigurationException e) {
      return super.toString();
    }
    final StringWriter sw = new StringWriter();
    final StreamResult sr = new StreamResult(sw);
    try {
      t.transform(getBodySource(), sr);
    } catch (final TransformerException e) {
      return super.toString();
    }
    return sw.toString();
  }
}
