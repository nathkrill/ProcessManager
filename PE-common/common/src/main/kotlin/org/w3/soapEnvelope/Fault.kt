/*
 * Copyright (c) 2018.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with ProcessManager.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.09.24 at 08:12:58 PM CEST 
//


package org.w3.soapEnvelope

import nl.adaptivity.util.multiplatform.URI
import nl.adaptivity.xml.schema.annotations.AnyType
import nl.adaptivity.xml.schema.annotations.Child
import nl.adaptivity.xml.schema.annotations.Element
import nl.adaptivity.xml.schema.annotations.XmlName


/**
 * Fault reporting structure
 *
 *
 * Java class for Fault complex type.
 *
 *
 * The following schema fragment specifies the expected content contained within
 * this class.
 *
 * ```
 * <complexType name="Fault">
 * <complexContent>
 * <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 * <sequence>
 * <element name="Code" type="{http://www.w3.org/2003/05/soap-envelope}faultcode"/>
 * <element name="Reason" type="{http://www.w3.org/2003/05/soap-envelope}faultreason"/>
 * <element name="Node" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 * <element name="Role" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/>
 * <element name="Detail" type="{http://www.w3.org/2003/05/soap-envelope}detail" minOccurs="0"/>
 * </sequence>
 * </restriction>
 * </complexContent>
 * </complexType>
 * ```
 */
@Element(name = "Fault", nsUri = Envelope.NAMESPACE, nsPrefix = Envelope.PREFIX,
         children = arrayOf(Child(name = "Code", type = Faultcode::class),
                            Child(name = "Reason", type = Faultreason::class),
                            Child(name = "Node", type = AnyType::class),
                            Child(name = "Role", type = URI::class),
                            Child(name = "Detail", type = Detail::class)))
class Fault {

    @XmlName("Code")
    var code: Faultcode? = null

    @XmlName("Reason")
    var reason: Faultreason? = null

    @XmlName("Node")
    var node: URI? = null

    @XmlName("Role")
    var role: URI ? =null

    @XmlName("Detail")
    var detail: Detail? = null

}
