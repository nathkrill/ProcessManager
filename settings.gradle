/*
 * Copyright (c) 2016.
 *
 * This file is part of ProcessManager.
 *
 * ProcessManager is free software: you can redistribute it and/or modify it under the terms of version 3 of the
 * GNU Lesser General Public License as published by the Free Software Foundation.
 *
 * ProcessManager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with ProcessManager.  If not,
 * see <http://www.gnu.org/licenses/>.
 */

pluginManagement {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }

        maven { url "https://kotlin.bintray.com/kotlinx" }
    }
    resolutionStrategy {
        eachPlugin {
            if (requested.id.id == "kotlinx-serialization") {
                def version = (requested.version == null || requested.version.length() == 0) ? serializationVersion : requested.version
/*
                // The kotlin version. Unfortunately intellij doesn't support the settings delegate (even though gradle does)
                val version = when {
                    !requested.version.isNullOrEmpty()
                         -> requested.version

                    else -> gradle.rootProject.extra["serializationVersion"]
                }
*/
                useModule("org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$version")

            } else if (requested.id.id == "net.devrieze.gradlecodegen") {
                useModule("net.devrieze:gradle-codegen:0.5.6")
            }
        }
    }
}

rootProject.name = "ProcessManager"
include(":multiplatform:common")
include(":multiplatform:common-nonshared")
include(":multiplatform:java")
include(":multiplatform:jvm")
include(":multiplatform:js")


include(":DarwinGenerators")
include(":java-common:common")
include(":java-common:jvm")
include(":java-common:js")
include(":jscommon")
include(":DarwinClients")
// No longer contains any worthwhile code.
//include(":DarwinCommon")
include(":DarwinJavaApi")
include(":PE-common:common")
include(":PE-common:jvm")
include(":PE-common:js")
include(":PE-common:endpointDoclet")
include(":JavaCommonApi:common")
include(":JavaCommonApi:java")
include(":JavaCommonApi:jvm")
include(":JavaCommonApi:js")
include(":PE-dataservices")
include(":PEUserMessageHandler")
include(":ProcessEngine:core")
include(":ProcessEngine:servlet")
include(":PE-diagram:common")
include(":PE-diagram:jvm")
include(":DarwinRealm")
include(":DarwinServices")
include(":PE-server")
include(":darwin-sql")
include(":accountmgr")
include(":accountmgr:js")
include(":accountcommon")
include(":darwin:jvm")
include(":darwin:shared")
include(":darwin:js")
include(":kotlinsql")
include(":structurizr")

include(":xmlutil:core:common")
include(":xmlutil:core:common-nonshared")
include(":xmlutil:core:java")
include(":xmlutil:core:jvm")
include(":xmlutil:core:js")
include(":xmlutil:serialization:common")
include(":xmlutil:serialization:java")

//include(":xmlutil:generator")
include(":TestSupport")
include(":webeditor")

//val androidEnabledProp: String by settings//= rootProject.extra["androidEnabledProp"]//extra.get["AndroidEnabledProp"].toBoolean()

// Android modules
if (Boolean.parseBoolean(androidEnabledProp)) {
    include(":multiplatform:android")
    include(":java-common:android")
    include(":PE-common:android")
    include(":PE-diagram:android")

    include(":android-auth")
    include(":darwinlib")
    include(":PMEditor")

    include(":xmlutil:core:android")
    include(":xmlutil:android")
}
